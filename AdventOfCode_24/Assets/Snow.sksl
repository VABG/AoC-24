uniform float2 iResolution;
uniform float iTime;

float hashOld12(float2 p)
{
	return fract(sin(dot(p, float2(12.7598, 75.234))) * 43718.5953);
}

float2 wobbleOffset(float id, float time, float scale)
{
    float time2 =  time * (0.25 + fract(id * 2496.531));
    time *= 0.25 + fract(id * 5123.579);
    float id2 = fract(id * 4127.13);
    id *= 1241.0;
    return float2(sin(id+ time)*scale, cos(id2 +time2+413.51) * scale);
}

float flake(float2 uv)
{
    // uv goes from 0 to 1 in xy
    uv -= 0.5;
    uv *= 15.0;
    
    float d = 1.0-length(uv);
    return clamp(d, .0, 1.0);
}

float snow(float2 uv, float size, float2 speed)
{
    float2 repeats = float2(size,size);
    uv -= speed * iTime;
    float time = iTime + 500;
    float2 id2d = float2(ceil(uv.x*repeats.x), ceil(uv.y*repeats.y));
    float id = hashOld12(id2d);
    
  	uv = float2(fract(uv.x*repeats.x), fract(uv.y*repeats.y));
    uv += wobbleOffset(id, time, 0.33);
    return flake(uv) * (id+.25);
}

float4 main(float2 fragCoord)
{
    float2 uv = fragCoord/512;
    uv.x *= iResolution.x/512;
    uv.y *= iResolution.y/512;

    uv.x += sin(uv.y*.5 + iTime*.25) * 0.05;
    float s = snow(uv, 20, float2(.015, .03)) * .2;
    s += snow(uv, 18, float2(.02, .045)) * .5;
    s += snow(uv, 16, float2(.05, .08));

    float3 col = float3(s,s,s);
    // Output to screen
    return float4(col,s);
}